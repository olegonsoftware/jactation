#!/bin/bash

export TARGETDIR=$(pwd)/target
export LOGDIR=$(pwd)/logs
export APPJAR=$TARGETDIR/app.jar

mkdir $TARGETDIR || true
mkdir $LOGDIR || true

makejar() {
echo "Building Spring Petclinic into $APPJAR"
docker buildx bake --progress plain --load -f bake.hcl jar

export SRCJAR=/home/myapp/spring-petclinic-main/target/spring-petclinic-3.0.0-SNAPSHOT.jar
docker run --rm --entrypoint cat petclinic-builder:v1 $SRCJAR > $APPJAR
echo "Building JAR [DONE]"
}

maketools() {
echo "Building Benchmark Tools"
docker buildx bake --progress plain --load -f bake.hcl tools
echo "Building Benchmark Tools [DONE]"
}

makeenv() {
export CONFIG=$1
docker buildx bake --progress plain --load -f bake.hcl $CONFIG
docker buildx bake --progress plain --load -f bake.hcl $CONFIG
}

maketest() {
export CONFIG=$1
echo "Running benchmarks for $CONFIG"
docker rm petclinic-benchmark-$CONFIG
docker run --mount type=bind,source="$(pwd)"/benchmark.sh,target=/home/myapp/benchmark.sh --name petclinic-benchmark-$CONFIG petclinic-benchmark-$CONFIG:v1

echo "Making copy of logs into $LOGDIR"
mkdir $LOGDIR || true
docker cp petclinic-benchmark-$CONFIG:/home/myapp/log $LOGDIR/$CONFIG-log || true
#docker run --rm --entrypoint cat petclinic-benchmark-$CONFIG:v1 /home/myapp/log > $LOGDIR/$CONFIG-log || true
echo "Benchmarks for $CONFIG [DONE]"
}

makeplots() {
export PYTHON_PARAMS="$@"

echo "Creating plots for for $PYTHON_PARAMS"
docker rm tools-python
docker run \
--mount type=bind,source="$(pwd)"/plots.py,target=/home/myapp/plots.py \
--mount type=bind,source="$(pwd)"/logs,target=/home/myapp/logs \
--name tools-python \
tools-python:v1 python \
/home/myapp/plots.py $PYTHON_PARAMS


echo "Making copy of logs into $LOGDIR"
mkdir $LOGDIR || true
docker cp tools-python:/home/myapp/plot/. $LOGDIR || true
echo "Plots for $PYTHON_PARAMS [DONE]"
}

if [ "$1" = "custom" ]; then
    if test -f "$APPJAR"; then
        echo "The script will use your custom app ($FILE)"
    else
        echo "The script must use your custom app ($FILE), but it doesn't exist"
        exit
   fi
else
  makejar
fi

maketools

makeenv "alpaquita"
makeenv "official"

maketest "alpaquita"
maketest "official"

makeplots alpaquita,official

echo "DONE"

