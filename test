#!/bin/bash

source $(pwd)/kits
source $(pwd)/env

maketest() {
export CONFIG=$1
export TEST_URL=$2
echo "Running benchmarks for $CONFIG"
docker rm petclinic-benchmark-$CONFIG
docker run -e TEST_URL=$TEST_URL --memory=2g --mount type=bind,source="$(pwd)"/benchmark.sh,target=/home/myapp/benchmark.sh --name petclinic-benchmark-$CONFIG petclinic-benchmark-$CONFIG:v1

echo "Making copy of logs into $LOGDIR"
mkdir $LOGDIR || true
docker cp petclinic-benchmark-$CONFIG:/home/myapp/log $LOGDIR/$CONFIG-log || true
echo "Benchmarks for $CONFIG [DONE]"
}

makeplots() {
export PYTHON_PARAMS="$@"

echo "Creating plots for $PYTHON_PARAMS"
docker rm tools-python
docker run \
--mount type=bind,source="$(pwd)"/plots.py,target=/home/myapp/plots.py \
--mount type=bind,source="$(pwd)"/logs,target=/home/myapp/logs \
--name tools-python \
tools-python:v1 python \
/home/myapp/plots.py $PYTHON_PARAMS


echo "Making copy of logs into $LOGDIR"
mkdir $LOGDIR || true
docker cp tools-python:/home/myapp/plot/. $LOGDIR || true
echo "Plots for $PYTHON_PARAMS [DONE]"
}

for item in ${KITS[*]}
do
    printf "Using test kit:   %s\n" $item
    default_value=http://localhost:8080/owners
    url=${1:-$default_value}
    printf "Using endpoint:   %s\n" $url
    # maketest $item $url
done

counter=0
plots=""
for item in ${KITS[*]}
do
    if [[ "${counter}" == "0" ]]; then
        plots=$item
        counter=1
    else
        plots="$plots,$item"
    fi
done

makeplots $plots

echo "DONE"
